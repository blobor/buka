worker_processes 1;

events {
  worker_connections 1024;
}

http {

  etag off;

  sendfile on;

  # don't send the nginx version number in error pages and Server header
  server_tokens off;

  include /etc/nginx/mime.types;
  include /etc/nginx/sites-available/skipass.site/gzip.conf;

  # List of application servers
  upstream app_servers {
    server web:3000;
  }

  # Configuration for the server
  server {

    listen 80 default_server;
    listen [::]:80 default_server;

    server_name skipass.site www.skipass.site;

    return 301 https://$server_name$request_uri;
  }

  # Configuration for the server
  server {

    listen 443 ssl http2 default_server deferred;
    listen [::]:443 ssl http2 default_server deferred;

    server_name skipass.site www.skipass.site;

    include /etc/nginx/sites-available/skipass.site/security-headers.conf;
    include /etc/nginx/sites-available/skipass.site/ssl.conf;

    # Here we define the web-root for our SSL proof
    location /.well-known {
      default_type text/plain;
      root /tmp/letsencrypt;
    }

    # map favicon to assets folder
    location = /favicon.ico {
      expires max;
      add_header Cache-Control "public, must-revalidate";

      etag on;
      autoindex off;

      try_files /usr/src/skipass.site/public/$uri =404;
    }

    # serve static files
    location /assets/ {
      expires 14d;
      add_header Cache-Control "public, must-revalidate";

      etag on;
      autoindex off;

      alias /usr/src/skipass.site/public/;
    }

    # Proxying the connections connections
    location / {
      proxy_pass         http://app_servers;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Host $server_name;

      proxy_hide_header X-Powered-By;
    }
  }
}
